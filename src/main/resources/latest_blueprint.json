{
	"name": "name of the composite solution",
	"version": "version of the composite solution",
	"input_ports": [
		{
			"container_name": "Aggregator - 1",
			"operation_signature": {
				"operation_name": "aggregate"
			}
		},
		{
			"container_name": "Aggregator - 2",
			"operation_signature": {
				"operation_name": "aggregate - operation names can be identical but IP and Port of containers will differ"
			}
		}
	],
	"nodes": [
		{
			"container_name": "Aggregator-1",
			"node_type": "DataMapper or MLModel or DataBroker or TrainingClient or Probe",
			"image": "url of the docker image of the named node in Nexus. Information consumed by deployer",
			"proto_uri": "url of the proto file of the ML Model, otherwise empty",
			"operation_signature_list": [
				{
					"operation_signature": {
						"operation_name": "aggregate",
						"input_message_name": "DataFrame - MC should send this message name to Probe along with proto_uri",
						"output_message_name": "DataFrames"
					},
					"connected_to": [
						{
							"container_name": "Predictor-1",
							"operation_signature": {
								"operation_name": "predict"
							}
						},
						{
							"container_name": "Predictor-2",
							"operation_signature": {
								"operation_name": "predict"
							}
						}
					]
				}
			]
		},
		{
			"container_name": "Predictor-1",
			"node_type": "DataMapper or MLModel or DataBroker or TrainingClient",
			"image": "url of the docker image of the named node",
			"proto_uri": "url of the proto file of the ML Model, otherwise empty",
			"operation_signature_list": [
				{
					"operation_signature": {
						"operation_name": "predict",
						"input_message_name": "DataFrames  - MC should send this message name to Probe along with proto_uri",
						"output_message_name": "Prediction"
					},
					"connected_to": [
						{
							"container_name": "Classifier-1",
							"operation_signature": {
								"operation_name": "classify"
							}
						},
						{
							"container_name": "Classifier-2",
							"operation_signature": {
								"operation_name": "classify"
							}
						}
					]
				}
			]
		},
		{
			"container_name": "Classifier-1",
			"node_type": "DataMapper or MLModel or DataBroker or TrainingClient",
			"image": "url of the docker image of the named node",
			"proto_uri": "url of the proto file of the ML Model, otherwise empty",
			"operation_signature_list": [
				{
					"operation_signature": {
						"operation_name": "classify",
						"input_message_name": "Prediction  - MC should send this message name to Probe along with proto_uri",
						"output_message_name": "Classification"
					},
					"connected_to": [
						{
							"container_name": "Alarm Generator-1",
							"operation_signature": {
								"operation_name": "generate_alarms"
							}
						},
						{
							"container_name": "Alarm Generator-2",
							"operation_signature": {
								"operation_name": "generate_alarms"
							}
						}
					]
				}
			]
		},
		{
			"container_name": "Alarm Generator-1",
			"node_type": "MLModel",
			"image": "url of the docker image of the named node",
			"proto_uri": "url of the proto file of the ML Model, otherwise empty",
			"operation_signature_list": [
				{
					"operation_signature": {
						"operation_name": "generate_alarms",
						"input_message_name": "Classification  - This is last model. MC should send both input and output message name to Probe along with proto_uri",
						"output_message_name": "Alarm -  - This is last model. MC should send both input and output message name to Probe along with proto_uri"
					},
					"connected_to": []
				}
			]
		},
		{
			"container_name": "My Data_Base Data_Broker",
			"node_type": "DataBroker",
			"image": "url of the docker image of the named node",
			"proto_uri": "For a DataBroker type node, this is empty",
			"script": "multi line DB or Fiesystem script - Only a DataBroker type node will have this field populated, otherwise empty",
			"mapping_table": {
				
			},
			"data_sources": [
				{
					"name": "Image-Data-Base",
					"operation_signature": {
						"operation_name": "getData"
					}
				}
			],
			"operation_signature_list": [
				{
					"operation_signature": {
						"operation_name": "retrieveSourceData",
						"input_message_name": "SourceData  - MC should NOT send any input or output of DataBroker or Data Mapper to Probe",
						"output_message_name": "DataFrame - MC should NOT send any input or output of DataBroker or Data Mapper to Probe"
					},
					"connected_to": [
						{
							"container_name": "Aggregator - 1",
							"operation_signature": {
								"operation_name": "aggregate"
							}
						},
						{
							"container_name": "Aggregator -2",
							"operation_signature": {
								"operation_name": "aggregate"
							}
						}
					]
				}
			]
		}
	],
	"probeIndicator": [
		{
			"value": "True or False"
		}
	],
	"training_clients": [
		{
			"container_name": "Image-Classifier-Trainer",
			"image": "url of the training client image in Nexus",
			"data_brokers": [
				{
					"name": "Image-Data-Broker",
					"operation_signature": {
						"operation_name": "get_image"
					}
				}
			],
			"ml_models": [
				{
					"name": "Image-Predictor",
					"operation_signature": {
						"operation_name": "predict_image"
					}
				}
			]
		}
	]
}
